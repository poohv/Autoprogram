import java.awt.Robot;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Field;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.ss.formula.functions.Value;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.awt.*; 

public class Imsi {
	
	public static void sendKeysCombo(String keys[]) {
	    try {/* www . j a v  a2 s.co  m*/

	        Robot robot = new Robot();

	        Class<?> cl = KeyEvent.class;

	        int[] intKeys = new int[keys.length];

	        for (int i = 0; i < keys.length; i++) {
	            Field field = cl.getDeclaredField(keys[i]);
	            intKeys[i] = field.getInt(field);
	            robot.keyPress(intKeys[i]);
	        }

	        for (int i = keys.length - 1; i >= 0; i--)
	            robot.keyRelease(intKeys[i]);
	    } catch (Throwable e) {
	        System.err.println(e);
	    }
	}
	
	
	public static int realtimechk() {
		int buynum = 1;
		try {
			
				Robot bot =  new Robot();	
			  bot.mouseMove(1466,222); bot.mousePress(InputEvent.BUTTON1_DOWN_MASK);//
			  //왼쪽누르기 
			  bot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);// 떄기
			  
			  bot.keyPress( KeyEvent.VK_CONTROL ); bot.keyPress( KeyEvent.VK_A );
			  bot.keyRelease(KeyEvent.VK_CONTROL); bot.keyRelease( KeyEvent.VK_A );
			  
			  
			  bot.keyPress( KeyEvent.VK_CONTROL ); bot.keyPress( KeyEvent.VK_C );
			  bot.keyRelease( KeyEvent.VK_CONTROL ); bot.keyRelease( KeyEvent.VK_C );
			  
			
			  //현재 갯수값 가져오기 
			  Clipboard clipboard =Toolkit.getDefaultToolkit().getSystemClipboard(); 
			  Transferable contents = clipboard.getContents(clipboard);   
			  String current = (String)contents.getTransferData(DataFlavor.stringFlavor);
			  //1 ->2개 사야됨
			  buynum = Integer.parseInt(current);
			  
			  bot.mouseMove(1400,290); 
			  bot.mousePress(InputEvent.BUTTON1_DOWN_MASK);//
			  //왼쪽누르기 
			  bot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);// 떄기
			  
			  bot.keyPress(1);
			  bot.keyRelease(1);
			  
				/*
				 * for (int i = 0; i < current.length(); i++) { String mykey=
				 * current.substring(0,0+1); int newkey=mykey.charAt(0); bot.keyPress(newkey);
				 * bot.keyRelease(newkey); }
				 */
			  
			  
			 System.out.println("현재수량 : "+buynum);
						  			 			
		} catch (Exception e) {
			e.printStackTrace();
		}	
		 return buynum;	
	}
	
	
	
	public static int exceldata(int buynum) throws IOException {
		//엑셀 데이터 값 가져오기
		int afterbuy = 0;//2
		String path = Imsi.class.getResource("").getPath();
		FileInputStream file = new FileInputStream(path+"rotto.xlsx");
		XSSFWorkbook workbook = new XSSFWorkbook(file);
		XSSFSheet sheet = workbook.getSheetAt(0);
		XSSFRow row = null;
		XSSFCell cell = null;
		//총 row 수
		int row_num =  sheet.getPhysicalNumberOfRows();
		// 시트 수량 
		
		//매수
		for (int i = 2; i < row_num; i++) {
			row = sheet.getRow(i);
			cell = row.getCell(11);
			afterbuy = (int) cell.getNumericCellValue(); 
			
			if(buynum == afterbuy) {
				cell = row.getCell(1);
				System.out.println(cell.getCellType());
				double price = (double) cell.getNumericCellValue();
				cell = row.getCell(2);
				int count = (int) cell.getNumericCellValue();
				
				
				
		
				
				
				
				System.out.println("매수: " + buynum +", "+ afterbuy+"가격,수량 : "+price+", "+count);
				//수량 가격 매수
				
				break;
			}
		}
		
		
		//매도
		for (int i = 2; i < row_num; i++) {
			row = sheet.getRow(i);
			cell = row.getCell(10);
			afterbuy = (int) cell.getNumericCellValue(); 
			
			if(buynum == afterbuy) {
				cell = row.getCell(3);
				double price = (double) cell.getNumericCellValue();
				cell = row.getCell(2);
				int count = (int) cell.getNumericCellValue();
				
				System.out.println("매도: " + buynum +", "+ afterbuy+"가격,수량 : "+price+", "+count);
				
				//수량 가격 매도
				
				break;
			}
		}
							
		return afterbuy;
			
	}
	
	
	
	
	
	public static void main(String[] args) throws InterruptedException, IOException {
		
		while (true) {
			//1분180000
		Thread.sleep(3000);
		 int one = realtimechk();
		exceldata(one);
		 
		}
		
	
		
	}
	
	
	

}
